AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: The Eternal Monument Auth Api
Parameters:
  Stage:
    Type: String
    AllowedValues:
      - dev
      - qa
Conditions:
  UseProdCondition:
    !Equals [!Ref Stage, prod]
Globals:
  Function:
    Runtime: python3.7
    CodeUri: src/
    Timeout: 15
    Environment:
      Variables:
        USER_TABLE: !Join [ "-", [ tem, !Ref Stage, users ] ]
Resources:
  ApiDeployment:
    Type: AWS::Serverless::Api
    Properties:
      OpenApiVersion: 3.0.1
      StageName: !Ref Stage
  AuthFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda auth function'
    Properties:
      FunctionName: !Join [ "-", [ tem, !Ref Stage, auth ] ]
      Handler: handler.auth_handler
  LoginFunction:
    Type: AWS::Serverless::Function
    Description: 'Lambda login function'
    Properties:
      FunctionName: !Join [ "-", [ tem, !Ref Stage, login ] ]
      Handler: handler.login_handler
      Policies:
        DynamoDBCrudPolicy:
          TableName: "*"
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /login
            Method: POST
            RestApiId: !Ref ApiDeployment
  AuthServiceMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: auth-service
      DomainName: !If [UseProdCondition, api.online.theeternalmonuments.com, !Join [ "", [ !Ref Stage, api, .online.theeternalmonuments.com ] ]]
      RestApiId: !Ref ApiDeployment
      Stage: !Ref ApiDeploymentStage
Outputs:
  EndpointUrl:
    Description: 'Auth REST endpoint URL'
    Value: !Sub 'https://${ApiDeployment}.execute-api.${AWS::Region}.amazonaws.com/${Stage}'